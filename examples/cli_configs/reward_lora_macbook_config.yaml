# Reward Model Training Configuration Example
# This configuration demonstrates LoRA fine-tuning for reward models

# Model configuration
model_name_or_path: "Skywork/Skywork-Reward-V2-Qwen3-0.6B"

# Reward model configuration
num_labels: 1  # Single scalar reward score (default). Access via: model(**inputs).logits[0][0]

# Dataset configuration
# Your dataset should have either:
# Option 1: prompt, response_a, response_b, preference (0 for A, 1 for B)
# Option 2: prompt, chosen, rejected
datasets:
  - path: "AmirMohseni/EduArena-Reward-Dataset"
    split: "train[:15%]"

# Optional validation dataset configuration
validation_datasets:
  - path: "AmirMohseni/EduArena-Reward-Dataset"
    split: "test"
    
# Training arguments optimized for reward model training
learning_rate: 1.0e-4  # Higher learning rate for LoRA
num_train_epochs: 1
per_device_train_batch_size: 1
gradient_accumulation_steps: 4
gradient_checkpointing: true
gradient_checkpointing_kwargs:
  use_reentrant: false
max_length: 2048  # Maximum sequence length for reward model

# Reward-specific settings
#center_rewards_coefficient: 0.01  # Incentivize mean-zero rewards (recommended)
disable_dropout: true  # Disable dropout for reward model stability

# Evaluation
eval_strategy: "steps"
eval_steps: 25
eval_on_start: false  # Evaluate before training starts
per_device_eval_batch_size: 2

# Logging and tracking  
logging_steps: 1
logging_strategy: steps
logging_first_step: true
log_completions: true  # Log completions for debugging and monitoring
num_completions_to_print: 3  # Number of completions to show in console

output_dir: "runs/skywork-qwen3-0.6b-reward-lora"
run_name: "reward-skywork-qwen3-0.6b"
project_name: "reward-model-training" 
report_to: ["wandb"]

# LoRA configuration
use_peft: true
lora_r: 4
lora_alpha: 8
lora_dropout: 0.01
lora_target_modules: "all-linear"
lora_task_type: "SEQ_CLS"  # Important: Use SEQ_CLS for reward models!

# Quantization for memory efficiency (optional)
#load_in_8bit: false
#load_in_4bit: true

# Saving and pushing
save_strategy: "steps"
save_steps: 100
save_total_limit: 1
push_to_hub: false

# Field mapping - Option 1: Using response_a/b + preference format
# The ultrafeedback_binarized dataset already has "chosen" and "rejected" fields,
# so we use Option 2 below instead
#field_mapping:
#  prompt_field: "prompt"
#  response_a_field: "response_a"
#  response_b_field: "response_b"
#  preference_field: "preference"  # 0 for A, 1 for B

# Field mapping - Option 2: Using direct chosen/rejected format (recommended)
field_mapping:
  chosen_field: "chosen"
  rejected_field: "rejected"

# Optional validation field mapping
# If not provided, will use the same mapping as training dataset
validation_field_mapping:
  chosen_field: "chosen"
  rejected_field: "rejected"

# Advanced options
dataloader_pin_memory: false
dataloader_num_workers: 2
remove_unused_columns: false
dataset_num_proc: 4


dataset_seed: 42
